// Code generated by capnpc-go. DO NOT EDIT.

package main

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Person struct{ capnp.Struct }

// Person_TypeID is the unique identifier for the type Person.
const Person_TypeID = 0xa172de1687c2b9b7

func NewPerson(s *capnp.Segment) (Person, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Person{st}, err
}

func NewRootPerson(s *capnp.Segment) (Person, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Person{st}, err
}

func ReadRootPerson(msg *capnp.Message) (Person, error) {
	root, err := msg.RootPtr()
	return Person{root.Struct()}, err
}

func (s Person) String() string {
	str, _ := text.Marshal(0xa172de1687c2b9b7, s.Struct)
	return str
}

func (s Person) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s Person) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Person) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Person) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Person) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Person) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Person) Age() uint16 {
	return s.Struct.Uint16(8)
}

func (s Person) SetAge(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Person) Email() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Person) HasEmail() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Person) EmailBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Person) SetEmail(v string) error {
	return s.Struct.SetText(1, v)
}

// Person_List is a list of Person.
type Person_List struct{ capnp.List }

// NewPerson creates a new list of Person.
func NewPerson_List(s *capnp.Segment, sz int32) (Person_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Person_List{l}, err
}

func (s Person_List) At(i int) Person { return Person{s.List.Struct(i)} }

func (s Person_List) Set(i int, v Person) error { return s.List.SetStruct(i, v.Struct) }

func (s Person_List) String() string {
	str, _ := text.MarshalList(0xa172de1687c2b9b7, s.List)
	return str
}

// Person_Promise is a wrapper for a Person promised by a client call.
type Person_Promise struct{ *capnp.Pipeline }

func (p Person_Promise) Struct() (Person, error) {
	s, err := p.Pipeline.Struct()
	return Person{s}, err
}

type AddressBook struct{ capnp.Struct }

// AddressBook_TypeID is the unique identifier for the type AddressBook.
const AddressBook_TypeID = 0x8525cb229e6583f0

func NewAddressBook(s *capnp.Segment) (AddressBook, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddressBook{st}, err
}

func NewRootAddressBook(s *capnp.Segment) (AddressBook, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddressBook{st}, err
}

func ReadRootAddressBook(msg *capnp.Message) (AddressBook, error) {
	root, err := msg.RootPtr()
	return AddressBook{root.Struct()}, err
}

func (s AddressBook) String() string {
	str, _ := text.Marshal(0x8525cb229e6583f0, s.Struct)
	return str
}

func (s AddressBook) People() (Person_List, error) {
	p, err := s.Struct.Ptr(0)
	return Person_List{List: p.List()}, err
}

func (s AddressBook) HasPeople() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AddressBook) SetPeople(v Person_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPeople sets the people field to a newly
// allocated Person_List, preferring placement in s's segment.
func (s AddressBook) NewPeople(n int32) (Person_List, error) {
	l, err := NewPerson_List(s.Struct.Segment(), n)
	if err != nil {
		return Person_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// AddressBook_List is a list of AddressBook.
type AddressBook_List struct{ capnp.List }

// NewAddressBook creates a new list of AddressBook.
func NewAddressBook_List(s *capnp.Segment, sz int32) (AddressBook_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AddressBook_List{l}, err
}

func (s AddressBook_List) At(i int) AddressBook { return AddressBook{s.List.Struct(i)} }

func (s AddressBook_List) Set(i int, v AddressBook) error { return s.List.SetStruct(i, v.Struct) }

func (s AddressBook_List) String() string {
	str, _ := text.MarshalList(0x8525cb229e6583f0, s.List)
	return str
}

// AddressBook_Promise is a wrapper for a AddressBook promised by a client call.
type AddressBook_Promise struct{ *capnp.Pipeline }

func (p AddressBook_Promise) Struct() (AddressBook, error) {
	s, err := p.Pipeline.Struct()
	return AddressBook{s}, err
}

const schema_961334376ded49ac = "x\xdaL\x8e\xbdJ\x03A\x14\x85\xcf\xb9\xb3q\x0dD" +
	"\xcd\xe0ba#\x04m,\x14E\x10\xd2\xc4\xd8\xa5\x10" +
	"2\xbd\x85\x8b;\x98\xe0\xfe\x0c\xbbZX\x8a\x04\xdf\xc0" +
	"R\xb0\xb7\x0f\xb6\xb6\xbe\x81\x85\xad\x95\xe0\x1b\xac\x8c`" +
	"Lu\xe0\xdc\x8f\xef\x9e\xf6\xf5\x91\xe8\xc6\x140\x8b\x8d" +
	"\x85\xfa\xfb\xce>v\xde\xb6&\xd0\x11\xeb\xe7\xc1Wv" +
	"x\xb0\xfa\x80\x06C`\xaf/\xd4'!\xa0\x07=\xb0" +
	"\x9e\xbe\xbc\xde\xaf}\x94O0\x11e\x0e\x15O\xdc\xbc" +
	"\xeb\x89\xcf\xdbO\xb0v\xb6\xac\x8a|\xd7\xa9\xdf\xdc9" +
	"\x8f]\xee\xba\xfd$)mU\x1d\x17\xc5%\x86\xa4\x09" +
	"T\x00\x04\x04\xf4R\xd7oQ4\x9b\xc2\x9e\xb3\x85K" +
	"-\x97\xc1\xa1\"\xdb\xff_A_\xce\xdc2\xef\x1e\xda" +
	"\xb2RE\xee\xb5\xed\x996^\x07\xcc\xa9\xa2\x19\x09\xc9" +
	"\x88\xbe\xb3\xdb\x809S4\xa9PK\x10Q\x00=\xee" +
	"\x00&Q4N\xa8\x15#*@g\xfb\x80\x19)\x9a" +
	"+\xa1\x1a'lB\xd8\x04W\xf28\xb3lA\xd8\x02" +
	"\xc3\xf8\xc22\x840\x047l\x16\x8f\xd3\xbf\xcbO\x00" +
	"\x00\x00\xff\xff.pNR"

func init() {
	schemas.Register(schema_961334376ded49ac,
		0x8525cb229e6583f0,
		0xa172de1687c2b9b7)
}
