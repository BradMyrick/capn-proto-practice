// Code generated by capnpc-go. DO NOT EDIT.

package person

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Person struct{ capnp.Struct }

// Person_TypeID is the unique identifier for the type Person.
const Person_TypeID = 0xa172de1687c2b9b7

func NewPerson(s *capnp.Segment) (Person, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Person{st}, err
}

func NewRootPerson(s *capnp.Segment) (Person, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Person{st}, err
}

func ReadRootPerson(msg *capnp.Message) (Person, error) {
	root, err := msg.RootPtr()
	return Person{root.Struct()}, err
}

func (s Person) String() string {
	str, _ := text.Marshal(0xa172de1687c2b9b7, s.Struct)
	return str
}

func (s Person) Id() uint64 {
	return s.Struct.Uint64(0)
}

func (s Person) SetId(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Person) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Person) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Person) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Person) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Person) Age() uint16 {
	return s.Struct.Uint16(8)
}

func (s Person) SetAge(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Person) Email() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Person) HasEmail() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Person) EmailBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Person) SetEmail(v string) error {
	return s.Struct.SetText(1, v)
}

// Person_List is a list of Person.
type Person_List struct{ capnp.List }

// NewPerson creates a new list of Person.
func NewPerson_List(s *capnp.Segment, sz int32) (Person_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Person_List{l}, err
}

func (s Person_List) At(i int) Person { return Person{s.List.Struct(i)} }

func (s Person_List) Set(i int, v Person) error { return s.List.SetStruct(i, v.Struct) }

func (s Person_List) String() string {
	str, _ := text.MarshalList(0xa172de1687c2b9b7, s.List)
	return str
}

// Person_Promise is a wrapper for a Person promised by a client call.
type Person_Promise struct{ *capnp.Pipeline }

func (p Person_Promise) Struct() (Person, error) {
	s, err := p.Pipeline.Struct()
	return Person{s}, err
}

type AddressBook struct{ capnp.Struct }

// AddressBook_TypeID is the unique identifier for the type AddressBook.
const AddressBook_TypeID = 0x8525cb229e6583f0

func NewAddressBook(s *capnp.Segment) (AddressBook, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddressBook{st}, err
}

func NewRootAddressBook(s *capnp.Segment) (AddressBook, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddressBook{st}, err
}

func ReadRootAddressBook(msg *capnp.Message) (AddressBook, error) {
	root, err := msg.RootPtr()
	return AddressBook{root.Struct()}, err
}

func (s AddressBook) String() string {
	str, _ := text.Marshal(0x8525cb229e6583f0, s.Struct)
	return str
}

func (s AddressBook) People() (Person_List, error) {
	p, err := s.Struct.Ptr(0)
	return Person_List{List: p.List()}, err
}

func (s AddressBook) HasPeople() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AddressBook) SetPeople(v Person_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPeople sets the people field to a newly
// allocated Person_List, preferring placement in s's segment.
func (s AddressBook) NewPeople(n int32) (Person_List, error) {
	l, err := NewPerson_List(s.Struct.Segment(), n)
	if err != nil {
		return Person_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// AddressBook_List is a list of AddressBook.
type AddressBook_List struct{ capnp.List }

// NewAddressBook creates a new list of AddressBook.
func NewAddressBook_List(s *capnp.Segment, sz int32) (AddressBook_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AddressBook_List{l}, err
}

func (s AddressBook_List) At(i int) AddressBook { return AddressBook{s.List.Struct(i)} }

func (s AddressBook_List) Set(i int, v AddressBook) error { return s.List.SetStruct(i, v.Struct) }

func (s AddressBook_List) String() string {
	str, _ := text.MarshalList(0x8525cb229e6583f0, s.List)
	return str
}

// AddressBook_Promise is a wrapper for a AddressBook promised by a client call.
type AddressBook_Promise struct{ *capnp.Pipeline }

func (p AddressBook_Promise) Struct() (AddressBook, error) {
	s, err := p.Pipeline.Struct()
	return AddressBook{s}, err
}

const schema_961334376ded49ac = "x\xdaL\x8e\xbfJ3Q\x14\xc4g\xce\xdd|\xfb\x05" +
	"\x12\xcd\xc5`a#\x04m,,D\x10\xd2\xc4\xd8\xa5" +
	"\x10rz\x0b\x17\xf7b\x82\xfb\x8f\xdd4\x16\x16\"\xe2" +
	"\x1bX\x0aZ\xdb\x07[K}\x07[+\xc17X\xb9" +
	"\x82\xd1j`\xce\x8f\xdf\x99\xcel_lc\x0e\xe8\xff" +
	"\xc6\xbf\xfa\xf3\xca\xdd\xf5^7\xafa\xdb\xac\x1fG\x1f" +
	"\xe9\xde\xee\xca-\x1a\x0c\x01;|\xb1\x87>G\x03\xb0" +
	"\x9e?=\xdf\xac\xbe\x95\xf7\xd06\xe5\x0f)\x9e8\x7f" +
	"\xb0\x97>/\xde\xc1\xbape\x95g\xdb'\x12\x15Y" +
	"\xd1\x1f\xc6q\xe9\xaa\xea \xcf\xcf\x801\xa9\x81\x09\x80" +
	"\x80\x80m\xf7\xfd\x08C\xdd\x10\x0e\x0a\x97\x17\x89\xe3\x12" +
	"86d\xe7\xf7\x1f\xe8\xcb\x85\x95\xdf\xd6\xb1+\xc3*" +
	"\xcf\xbc\xaf\xb3\xf0Ek\x80\x1e\x19\xeaDHv\xe9;" +
	"\xb7\x05\xe8\xb1\xa1&B+A\x97\x02\xd8i\x0f\xd0\xd8" +
	"P\x0b\xa15\xec\xd2\x006\xdd\x01tb\xa83\xa1\x99" +
	"\xc6lB\xd8\x04\x97\xb3(ulA\xd8\x02\xc3\xe8\xd4" +
	"1\x840\x04\xd7]\x1aM\x93\x9f\xcbW\x00\x00\x00\xff" +
	"\xff\x16\xb3I "

func init() {
	schemas.Register(schema_961334376ded49ac,
		0x8525cb229e6583f0,
		0xa172de1687c2b9b7)
}
